// Use SSL
{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Launch Server",
      "type": "go",
      "request": "launch",
      "mode": "debug",
      "buildFlags": "-ldflags='-X main.version=1.1.0'",
      "program": "${workspaceFolder}/backend/cmd/cloudhub",
      "env": {},
      "args": [
        "-l=debug",
        "-d",
        "--port=443",
        "--cert=${workspaceFolder}/backend/cmd/cloudhub/cloudhub_self_signed.pem",
        "-u=salt:http://<ip>:<port>/run",
        "-k=salt:<token key>",
        "-u=swan:https://<ip>/api/v1/graphql",
        "-k=swan:<token key>",
        "-u=oncue:<port>",
        "-u=vsphere:on",
        "-c=./cloudhub-canned/",
        "--protoboards-path=./cloudhub-protoboards/",
        "--auth-duration=24h", //default:"720h(30d)", 0 means authentication expires on browser close
        "-t=<personal secret key>",
        "-i=<token key>",
        "-s=<token key>",
        "--google-client-id=",
        "--google-client-secret=",
        "--public-url=https://localhost",
        "--auth0-domain=https://cloudhub.auth0.com",
        "--auth0-client-id=<token key>",
        "--auth0-client-secret=<token key>",
        "--custom-link=SWAN Condutor:https://xxx.xxx.xxx.xxx",
        "--login-auth-type=basic", // Select the login type from mix, oauth, basic ... default: oauth
        "--password-policy=(?=.*[0-9]{1,50})(?=.*[~`!@#$%\\^&*()-+=]{1,50})(?=.*[a-zA-Z]{2,50}).{8,50}$",
        "--password-policy-message=Enter at least 8 characters, including at least 1 digit and 1 special characters and 2 characters.eg, cloud!hub2",
        "--mail-subject=[Notifiy] $user_id Password is initialized",
        "--mail-body-message=Reset OTP for $user_id is '$user_pw'.<br>Do not forget this!<br>This OTP will use just once when login into cloudhub.<br>Then you must set up the new password",
        "--external-exec=",
        "--external-exec-args=",
        "--influxdb-url=http://<influxDB>:<port>",
        "--kapacitor-url=http://<kapacitor>:<port>"
      ],
      "showLog": true
      // "logOutput": "debugger"
    },
    {
      "name": "Launch Chrome",
      "type": "pwa-chrome",
      "request": "launch",
      "url": "https://localhost/",
      "webRoot": "${workspaceFolder}/frontend/src"
    },
    {
      "name": "Launch Chrome via Proxy",
      "type": "pwa-chrome",
      "request": "launch",
      "url": "http://localhost:8080/",
      "webRoot": "${workspaceFolder}/frontend/src"
    }
  ]
}
