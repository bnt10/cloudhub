{
  "id": "ab9849bf-ec52-4f16-a937-8d371e947cdd",
  "meta": {
    "name": "GCP StackDriver",
    "measurements": [
      "agent.googleapis.com/agent",
      "agent.googleapis.com/memory",
      "agent.googleapis.com/disk",
      "compute.googleapis.com/instance/cpu",
      "compute.googleapis.com/instance/disk",
      "compute.googleapis.com/instance/network",
      "compute.googleapis.com/firewall"
    ],
    "version": "1.0",
    "dashboardVersion": "1.x",
    "description": "Dashboard for the telegraf input plug-in: stackdriver. Provides visibility on a single node.",
    "author": "InfluxData",
    "license": "MIT",
    "icon": "",
    "url": "https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver"
  },
  "data": {
    "cells": [
      {
        "i": "750a64dd-f6ce-44eb-a692-d762bbe9cb9a",
        "x": 72,
        "y": 2,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Firewall Dropped Traffic",
        "queries": [
          {
            "query": "SELECT non_negative_derivative(max(\"dropped_bytes_count\")) FROM \":db:\".\":rp:\".\"compute.googleapis.com/firewall\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: GROUP BY time(:interval:),\"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT non_negative_derivative(max(\"dropped_bytes_count\")) FROM \":db:\".\":rp:\".\"compute.googleapis.com/firewall\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: GROUP BY time(:interval:),\"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "Traffic",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "8aa29e7d-d67b-48fd-b7a9-61f109dfabd5",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "dbd7ebe1-228d-4eaf-84f2-447319425f32",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "1e5ca60f-e018-422d-845c-2ab5e8656370",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          {
            "internalName": "compute.googleapis.com/firewall.mean_dropped_bytes_count",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "699ffb67-182d-4c78-9ccf-235713736421",
        "x": 48,
        "y": 0,
        "w": 24,
        "h": 12,
        "minW": 10,
        "minH": 4,
        "name": "Max CPU",
        "queries": [
          {
            "query": "SELECT max(\"mean_utilization\") * 100 FROM (SELECT mean(\"utilization\") AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_name\" FILL(null))",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT max(\"mean_utilization\") * 100 FROM (SELECT mean(\"utilization\") AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_name\" FILL(null))",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "%",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "single-stat",
        "colors": [
          {
            "id": "base",
            "type": "text",
            "hex": "#00C9FF",
            "name": "laser",
            "value": "-1000000000000000000"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "de11dcc0-ea9f-42cd-a2d5-d6c63868e7db",
        "x": 72,
        "y": 0,
        "w": 24,
        "h": 12,
        "minW": 10,
        "minH": 4,
        "name": "VMx by Region",
        "queries": [
          {
            "query": "SELECT count(\"uptime\") AS \"count_uptime\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:) FILL(previous)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT count(\"uptime\") AS \"count_uptime\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:) FILL(previous)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "e573a8a1-7e9c-4b59-9491-56dbd15bab31",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "77efd7c3-1b83-439c-ad3f-955cad936b74",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "4d11a261-e127-4e90-b6d4-e35faad19537",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "ef7c1786-be99-4460-a589-df8bee0d9403",
        "x": 0,
        "y": 0,
        "w": 24,
        "h": 12,
        "minW": 10,
        "minH": 4,
        "name": "Active VMs",
        "queries": [
          {
            "query": "SELECT count(distinct(instance_id)) FROM (SELECT mean(\"utilization\") AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND project_id = :project_id: GROUP BY time(:interval:), \"instance_id\" LIMIT 1) FILL(previous)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT count(distinct(instance_id)) FROM (SELECT mean(\"utilization\") AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND project_id = :project_id: GROUP BY time(:interval:), \"instance_id\" LIMIT 1) FILL(previous)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "single-stat",
        "colors": [
          {
            "id": "base",
            "type": "text",
            "hex": "#00C9FF",
            "name": "laser",
            "value": "-1000000000000000000"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          {
            "internalName": "compute.googleapis.com/instance/cpu.count",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "12e24c04-805f-458e-892c-89a91297779a",
        "x": 0,
        "y": 2,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "CPU utilization",
        "queries": [
          {
            "query": "SELECT mean(\"utilization\") * 100 AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT mean(\"utilization\") * 100 AS \"mean_utilization\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/cpu\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "percentage",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "f0be5d29-be3a-41e5-b4f1-d0c265f58810",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "67c2992e-5d76-4ec7-8ff3-71448ffa98ab",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "ed8192a0-3371-42cc-9d20-3d037a3e2e7c",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "9c064469-014a-4013-a4c7-7872ed5a476b",
        "x": 48,
        "y": 2,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Memory usage (Agent)",
        "queries": [
          {
            "query": "SELECT mean(\"percent_used\") AS \"mean_percent_used\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/memory\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: AND \"state\"='used' GROUP BY time(:interval:), \"instance_id\" FILL(null) ",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT mean(\"percent_used\") AS \"mean_percent_used\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/memory\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: AND \"state\"='used' GROUP BY time(:interval:), \"instance_id\" FILL(null) ",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "percentage",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "1094c8e9-2380-4e1d-ac20-fa16421207ce",
        "x": 0,
        "y": 5,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Network Sent",
        "queries": [
          {
            "query": "SELECT non_negative_derivative(max(\"sent_bytes_count\"), 1s) AS \"sent_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/network\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT non_negative_derivative(max(\"sent_bytes_count\"), 1s) AS \"sent_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/network\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\"=:project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "Sent (KiB)",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "a5906bc3-be8f-4fc0-89b3-87f8771b82c8",
        "x": 24,
        "y": 5,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Network Received",
        "queries": [
          {
            "query": "SELECT non_negative_derivative(max(\"received_bytes_count\"), 1s) AS \"mean_received_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/network\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT non_negative_derivative(max(\"received_bytes_count\"), 1s) AS \"mean_received_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/network\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "Received (KiB)",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "3da2a349-9b5f-48ed-a5d7-d83f346fa0dc",
        "x": 72,
        "y": 5,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "DisK Write",
        "queries": [
          {
            "query": "SELECT mean(\"write_bytes_count\") AS \"mean_write_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT mean(\"write_bytes_count\") AS \"mean_write_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "Write (KiB)",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "8ef741bd-fb92-4279-a411-532d53b25c6c",
        "x": 48,
        "y": 5,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Disk Read",
        "queries": [
          {
            "query": "SELECT mean(\"read_bytes_count\") AS \"mean_read_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT mean(\"read_bytes_count\") AS \"mean_read_bytes_count\" FROM \":db:\".\":rp:\".\"compute.googleapis.com/instance/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: GROUP BY time(:interval:), \"instance_id\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "Read (KiB)",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "58fdbc1f-1392-4ba8-a9f7-1892e27d3202",
        "x": 24,
        "y": 2,
        "w": 24,
        "h": 18,
        "minW": 10,
        "minH": 4,
        "name": "Disk Usage",
        "queries": [
          {
            "query": "SELECT mean(\"percent_used\") AS \"mean_percent_used\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: AND \"state\"='used' AND (\"device\"='/dev/sda1' OR \"device\"='/dev/sda2') GROUP BY time(:interval:), \"instance_id\", \"device\" FILL(null)",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT mean(\"percent_used\") AS \"mean_percent_used\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/disk\" WHERE time > :dashboardTime: AND time < :upperDashboardTime: AND \"project_id\" = :project_id: AND \"state\"='used' AND (\"device\"='/dev/sda1' OR \"device\"='/dev/sda2') GROUP BY time(:interval:), \"instance_id\", \"device\" FILL(null)",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "percentage",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "line",
        "colors": [
          {
            "id": "0f8e2ad4-0d26-4518-bb11-091e19094b4c",
            "type": "scale",
            "hex": "#31C0F6",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "faac13c0-d315-4d09-b1ec-4b326bf83024",
            "type": "scale",
            "hex": "#A500A5",
            "name": "Nineteen Eighty Four",
            "value": "0"
          },
          {
            "id": "634e5744-641d-4574-8311-73c8ec054409",
            "type": "scale",
            "hex": "#FF7E27",
            "name": "Nineteen Eighty Four",
            "value": "0"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      },
      {
        "i": "d9df16a8-1e5c-49c3-b252-cf5c158f5569",
        "x": 24,
        "y": 0,
        "w": 24,
        "h": 12,
        "minW": 10,
        "minH": 4,
        "name": "With Agent",
        "queries": [
          {
            "query": "SELECT count(\"instance_id\") FROM (SELECT mean(\"uptime\") AS \"mean_uptime\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/agent\" WHERE time > now() - 10m GROUP BY \"instance_id\")",
            "queryConfig": {
              "database": "",
              "measurement": "",
              "retentionPolicy": "",
              "fields": [],
              "tags": {},
              "groupBy": {
                "time": "",
                "tags": []
              },
              "areTagsAccepted": false,
              "rawText": "SELECT count(\"instance_id\") FROM (SELECT mean(\"uptime\") AS \"mean_uptime\" FROM \":db:\".\":rp:\".\"agent.googleapis.com/agent\" WHERE time > now() - 10m GROUP BY \"instance_id\")",
              "range": null,
              "shifts": null
            },
            "source": "",
            "type": "influxql"
          }
        ],
        "axes": {
          "x": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          },
          "y": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "ea",
            "base": "10",
            "scale": "linear"
          },
          "y2": {
            "bounds": ["", ""],
            "label": "",
            "prefix": "",
            "suffix": "",
            "base": "10",
            "scale": "linear"
          }
        },
        "type": "single-stat",
        "colors": [
          {
            "id": "base",
            "type": "text",
            "hex": "#00C9FF",
            "name": "laser",
            "value": "-1000000000000000000"
          }
        ],
        "legend": {},
        "tableOptions": {
          "verticalTimeAxis": true,
          "sortBy": {
            "internalName": "time",
            "displayName": "",
            "visible": true
          },
          "wrapping": "truncate",
          "fixFirstColumn": true
        },
        "fieldOptions": [
          {
            "internalName": "time",
            "displayName": "",
            "visible": true
          }
        ],
        "timeFormat": "MM/DD/YYYY HH:mm:ss",
        "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
        },
        "note": "To enable this graph, you will need to configure the [Telegraf stackdriver Input plugin](https://github.com/snetsystems/telegraf/tree/master/plugins/inputs/stackdriver).",
        "noteVisibility": "showWhenNoData"
      }
    ],
    "templates": [
      {
        "tempVar": ":project_id:",
        "values": [],
        "id": "",
        "type": "tagValues",
        "label": "",
        "query": {
          "influxql": "SHOW TAG VALUES ON :database: FROM :measurement: WITH KEY=:tagKey:",
          "db": "telegraf",
          "measurement": "compute.googleapis.com/instance",
          "tagKey": "project_id",
          "fieldKey": ""
        }
      }
    ]
  }
}
